name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, beta, nightly]
        exclude:
          # Reduce matrix size while maintaining coverage
          - os: windows-latest
            rust: beta
          - os: macos-latest
            rust: beta
    
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b  # v1
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@267a8a94c98a1d6542d1ea6c13b41d0fa1184dcb  # v2.8.1
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libcapstone-dev pkg-config
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install capstone
    
    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Capstone will be built from source on Windows
        echo "Capstone will be built from source"
    
    - name: Check formatting
      if: matrix.rust == 'stable'
      run: cargo fmt --all -- --check
    
    - name: Run clippy (default features)
      run: cargo clippy --all-targets -- -D warnings
    
    - name: Run clippy (all features)
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run clippy (no default features)
      run: cargo clippy --all-targets --no-default-features -- -D warnings
    
    - name: Build (default features)
      run: cargo build --verbose
    
    - name: Build (all features)
      run: cargo build --verbose --all-features
    
    - name: Build (no default features)
      run: cargo build --verbose --no-default-features
    
    - name: Run tests (default features)
      run: cargo test --verbose
    
    - name: Run tests (all features)
      run: cargo test --verbose --all-features
    
    - name: Run tests (no default features)
      run: cargo test --verbose --no-default-features
    
    - name: Run examples (default features)
      if: matrix.rust == 'stable'
      run: |
        cargo run --example basic_analysis
    
    - name: Run examples (with features)
      if: matrix.rust == 'stable'
      run: |
        cargo run --example control_flow --features control-flow
        cargo run --example disassembly --features disasm-capstone

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b  # v1
      with:
        toolchain: stable
        components: llvm-tools-preview
    
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@267a8a94c98a1d6542d1ea6c13b41d0fa1184dcb  # v2.8.1
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcapstone-dev pkg-config
    
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@4351b0c7eac445cb6f5a730526fcaef1473d3ea6  # v2.58.12
    
    - name: Generate code coverage
      run: |
        cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24  # v5.4.3
      with:
        files: lcov.info
        fail_ci_if_error: true

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b  # v1
      with:
        toolchain: stable
    
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@267a8a94c98a1d6542d1ea6c13b41d0fa1184dcb  # v2.8.1
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcapstone-dev pkg-config
    
    # Note: Benchmarks are currently disabled in Cargo.toml
    # This will be ready when benchmark files are implemented
    - name: Run benchmarks
      run: |
        echo "Benchmarks will be run once benchmark files are implemented"
        # cargo bench --all-features

  docs:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b  # v1
      with:
        toolchain: stable
    
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@267a8a94c98a1d6542d1ea6c13b41d0fa1184dcb  # v2.8.1
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcapstone-dev pkg-config
    
    - name: Check documentation
      run: cargo doc --all-features --no-deps --document-private-items
      env:
        RUSTDOCFLAGS: "-D warnings"

  feature-combinations:
    name: Feature Combination Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b  # v1
      with:
        toolchain: stable
    
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@267a8a94c98a1d6542d1ea6c13b41d0fa1184dcb  # v2.8.1
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcapstone-dev pkg-config
    
    - name: Install cargo-hack
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-hack
    
    - name: Test feature combinations
      run: |
        cargo hack check --feature-powerset --depth 2 --no-dev-deps
